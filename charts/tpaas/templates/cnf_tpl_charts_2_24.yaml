{{- if or (or (not (hasKey .Values.global.mtcil "enableServiceprovisioning")) (not (hasKey .Values.global.mtcil "enableNamespaceProvisioning"))) .Values.global.mtcil.enableServiceprovisioning .Values.global.mtcil.enableNamespaceProvisioning }}
#CNF TEMPLATE - NAMESPACE
{{ $cnfHdr := (dict "" "") -}}
{{- include "cnfTplHeader_2_24" (dict "cnfHdr" $cnfHdr "dot" . ) -}}
{{- if and (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_namespaces.create) (.Values.global) (.Values.global.mtcil) (.Values.global.mtcil.create_ns) -}}
apiVersion: v1
kind: Namespace
{{- $_ := set $cnfHdr.nfVariables "component_name" ($cnfHdr.nfVariables.nfPrefix|toString) -}}
{{- $_ := set $cnfHdr.nfVariables "create_meta_ns" "false" -}}
{{- include "cnfTplMetadata_2_24" (dict "setOffset" "0" "cnfHdr" $cnfHdr "metadata" $cnfHdr.nfVariables.root.Values.nf.cnftpl_namespaces.metaspec) }}
{{- end }}
{{- end }}


{{- if or (or (not (hasKey .Values.global.mtcil "enableServiceprovisioning")) (not (hasKey .Values.global.mtcil "enableConfigmapProvisioning"))) .Values.global.mtcil.enableServiceprovisioning .Values.global.mtcil.enableConfigmapProvisioning }}
#CNF TEMPLATE - CONFIGMAP
{{ $cnfHdr := (dict "" "") -}}
{{- include "cnfTplHeader_2_24" (dict "cnfHdr" $cnfHdr "dot" . ) -}}
{{/* $defaultVariables := .Values.default -}}
{{- $root := . -*/}}
{{- $configtype := (list "static-cfg" "env-cfg" "mgmt-cfg" "dashboard-cfg" "eventdef-cfg" "alerts-cfg" "metrics-cfg") -}}
{{- $service_name := $cnfHdr.nfVariables.component_name -}}
{{- $nfVariables := $cnfHdr.nfVariables -}}
{{- range $index, $type := $configtype -}}
{{- $_ := set $nfVariables "component_name" (printf "%s-%s" ($service_name|toString) ($type|toString)) -}}
{{- $_ := set $nfVariables "configtype" ($type|toString) -}}
{{- $specOffset := 0 -}}
{{- if (and (eq ($type|toString) "static-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.static_cfg.create)) -}}
{{- if ($cnfHdr.nfVariables.root.Files.Glob "config/static/*") }}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.static_cfg.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- $_ := set $nfVariables "pathformat" (printf "%s" "config/static/*") -}}
{{- tpl (include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- end }}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- else if (and (eq ($type|toString) "env-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.env_cfg.create)) -}}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.env_cfg.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- tpl (include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- else if (and (eq ($type|toString) "mgmt-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.mgmt_cfg.create)) -}}
{{- $_ := set $nfVariables "annotations" (printf "microSvcName:%s\nenableConfigMgmt: true\ninit: true" ($service_name|toString)) -}}
{{- if ($cnfHdr.nfVariables.root.Files.Glob "config/mgmt/*") }}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.mgmt_cfg.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- $_ := set $nfVariables "mgmtpathformat" (printf "%s" "config/mgmt/*") -}}
{{- $_ := set $nfVariables "mgmtbinpathformat" (printf "%s" "config/mgmt/*.tgz") -}}
{{- if ($cnfHdr.nfVariables.root.Files.Glob "config/mgmt/*.tgz") }}
{{- tpl (include "configMapBinaryDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- end }}
{{- tpl (include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- end }}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- else if (and (eq ($type|toString) "dashboard-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_dashboard.create)) -}}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_dashboard.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- tpl (include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- else if (and (eq ($type|toString) "eventdef-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_eventdef.create)) -}}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_eventdef.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables)) -}}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- else if (and (eq ($type|toString) "alerts-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_alertsdef.create)) -}}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_alertsdef.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- tpl (include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- else if (and (eq ($type|toString) "metrics-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_metricsdef.create)) -}}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_metricsdef.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables)) -}}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- end -}}
{{- end }}

#CNF TEMPLATE - CONFIGMAP
{{ $cnfHdr := (dict "" "") -}}
{{- include "cnfTplHeader_2_24" (dict "cnfHdr" $cnfHdr "dot" . ) -}}
{{- $configtype := (list "static-cfg") -}}
{{- $service_name := $cnfHdr.nfVariables.svcname -}}
{{- $nfVariables := $cnfHdr.nfVariables -}}
{{- range $index, $type := $configtype -}}
{{- $processedDict := dict -}}
{{- range $path, $_ := $cnfHdr.nfVariables.root.Files.Glob "config/static/**" }}
{{/*- printf "range out: %s" ($path|toString) */}}
{{- if (dir $path | regexFind "config/static/.*/*") }}
{{/*- printf "level2 path regex matched: %s" ($path|toString) */}}
{{- $name := base (dir $path) }}
{{- if not (hasKey $processedDict $name) -}}
{{ $_ := set $processedDict $name "true" }}
{{/*- printf "Directory name:%s" $name */}}
{{- $_ := set $nfVariables "component_name" (printf "%s-%s-%s" ($service_name|toString) ($name|toString) ($type|toString)) -}}
{{- $_ := set $nfVariables "configtype" ($type|toString) -}}
{{- $_ := set $nfVariables "pathformat" (printf "config/static/%s/*" ($name|toString)) -}}
{{- $specOffset := 0 -}}
{{/*- printf "Path format:%s" $nfVariables.pathformat */}}
{{- if (and (eq ($type|toString) "static-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.static_cfg.create)) -}}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.static_cfg.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- tpl (include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}

{{ $cnfHdr := (dict "" "") -}}
{{- include "cnfTplHeader_2_24" (dict "cnfHdr" $cnfHdr "dot" . ) -}}
{{- $configtype := (list "mgmt-cfg") -}}
{{- $service_name := $cnfHdr.nfVariables.svcname -}}
{{- $nfVariables := $cnfHdr.nfVariables -}}
{{- range $index, $type := $configtype -}}
{{- $processedDict := dict -}}
{{- range $path, $_ := $cnfHdr.nfVariables.root.Files.Glob "config/mgmt/**" }}
{{/*- printf "#range out: %s" ($path|toString) */}}
{{- if (dir $path | regexFind "config/mgmt/.*/*") }}
{{/*- printf "#level2 path regex matched: %s" ($path|toString) */}}
{{- $name := base (dir $path) }}
{{- if not (hasKey $processedDict $name) -}}
{{ $_ := set $processedDict $name "true" }}
{{/*- printf "#Directory name:%s" $name */}}
{{- $_ := set $nfVariables "component_name" (printf "%s-%s-%s" ($service_name|toString) ($name|toString) ($type|toString)) -}}
{{- $_ := set $nfVariables "configtype" ($type|toString) -}}
{{- $_ := set $nfVariables "mgmtpathformat" (printf "config/mgmt/%s/*" ($name|toString)) -}}
{{- $_ := set $nfVariables "mgmtbinpathformat" (printf "config/mgmt/%s/*.tgz" ($name|toString)) -}}
{{- $specOffset := 0 -}}
{{- if (and (eq ($type|toString) "mgmt-cfg" ) (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.mgmt_cfg.create)) -}}
{{- printf "%s" "apiVersion: v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: ConfigMap" | nindent (add $specOffset 0 | int) -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_configmap.mgmt_cfg.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- if ($cnfHdr.nfVariables.root.Files.Glob $cnfHdr.nfVariables.mgmtbinpathformat) }}
{{- tpl (include "configMapBinaryDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- end }}
{{- tpl (include "configMapDataSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) ) (dict "nfVariables" $nfVariables))) $ -}}
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- end }}
{{- end }}
{{- end }}
{{- end }}
{{- end }}


{{ $cnfHdr := (dict "" "") -}}
{{- include "cnfTplHeader_2_24" (dict "cnfHdr" $cnfHdr "dot" . ) -}}
{{- $configtype := "dashboard-cfg" -}}
{{- $service_name := $cnfHdr.nfVariables.svcname -}}
{{- $nfVariables := $cnfHdr.nfVariables -}}
{{- $_ := set $nfVariables "component_name" (printf "%s-%s" ($service_name|toString) ($configtype|toString)) -}}
{{- $_ := set $nfVariables "configtype" ($configtype|toString) -}}
{{- $specOffset := 0 -}}
{{- if and (eq true $cnfHdr.nfVariables.root.Values.nf.cnftpl_dashboard.create) $cnfHdr.nfVariables.root.Values.nf.cnftpl_dashboard.job_create -}}
{{- printf "%s" "apiVersion: batch/v1" | nindent (add $specOffset 0 | int) -}}
{{- printf "%s" "kind: Job" | nindent (add $specOffset 0 | int) -}}
{{- if $cnfHdr.nfVariables.root.Values.nf.cnftpl_dashboard.app_name_prefix }}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_dashboard.metaspec) (dict "nfVariables" $nfVariables) (dict "metadata" (dict "name" $cnfHdr.nfVariables.root.Values.nf.cnftpl_dashboard.app_name_prefix))) -}}
{{- else }}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_dashboard.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- end }}
{{printf "" }}
spec:
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "false"
    spec:
      containers:
      - name: app-dash-provision
        image: {{ .Values.global.hub }}/app-dash-client:1.1
        imagePullPolicy: {{ $cnfHdr.nfVariables.root.Values.global.mtcil.imagePullPolicy | default (print "Always") | quote }}
        env:
         - name: GRAFANA_URL
{{- if and (.Values.global) (.Values.global.mtcil) (.Values.global.mtcil.grafana) }}
           value: {{ .Values.global.mtcil.grafana.url }}
{{- else }}
           value: "http://grafana.mvnr-paas:3000"
{{- end }}
         - name: GRAFANA_USER
{{- if and (.Values.global) (.Values.global.mtcil) (.Values.global.mtcil.grafana) }}
           value: {{ .Values.global.mtcil.grafana.user }}
{{- else }}
           value: "admin"
{{- end }}
         - name: GRAFANA_PASSWORD
{{- if and (.Values.global) (.Values.global.mtcil) (.Values.global.mtcil.grafana) }}
           value: {{ .Values.global.mtcil.grafana.password }}
{{- else }}
           value: "admin"
{{- end }}
        command: ["/bin/bash", "-c"]
        args:
        - /opt/bin/create_dashboard.sh
        volumeMounts:
          - mountPath: /dashboards/
            name: app-dash
      volumes:
        - configMap:
            name: {{printf "%s-%s" ($cnfHdr.nfVariables.component|toString) ($configtype|toString)}}
          name: app-dash
      restartPolicy: OnFailure
{{- printf "---" | nindent (add $specOffset 0 | int) -}}
{{- end }}
{{- end }}

{{- if or (or (not (hasKey .Values.global.mtcil "enableServiceprovisioning")) (not (hasKey .Values.global.mtcil "enableSecretProvisioning"))) .Values.global.mtcil.enableServiceprovisioning .Values.global.mtcil.enableSecretProvisioning }}
#CNF TEMPLATE - SECRET
{{ $cnfHdr := (dict "" "") -}}
{{- include "cnfTplHeader_2_24" (dict "cnfHdr" $cnfHdr "dot" . ) -}}
{{- $service_name := $cnfHdr.nfVariables.svcname -}}
{{- $nfVariables := $cnfHdr.nfVariables -}}
{{- if $cnfHdr.nfVariables.root.Values.nf.cnftpl_secret.create -}}
apiVersion: v1
kind: Secret
{{- $specOffset := 0 -}}
{{- include "metaSpec_2_24" (merge (dict "specOffset" (add $specOffset 0 | int) "metaSpec" $cnfHdr.nfVariables.root.Values.nf.cnftpl_secret.metaspec) (dict "nfVariables" $nfVariables)) -}}
{{- include "secretSpec" (merge (dict "specOffset" (add $specOffset 0 | int) "secretSpec" (.Values.nf.cnftpl_secret.secretspec)) (dict "nfVariables" $nfVariables)) -}}
{{- end }}
{{- end }}
